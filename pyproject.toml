[tool.poetry]
name = "mospweb"
version = "0.9.0"
description = "MOSP Puzzle Hunt website"
authors = ["Evan Chen <evan@evanchen.cc>"]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
Django = "^4.1.7"
Markdown = "^3.3.4"
PyMySQL = "^1.0.2"
PyYAML = "^6.0"
crispy-tailwind = "^0.5.0"
django-allauth = "^0.51.0"
django-markdownx = { git = "https://github.com/neutronX/django-markdownx", rev = "adcaa9e" }
django-reversion = "^5.0.2"
django-stubs = "^1.12.0"
django-stubs-ext = "^0.5.0"
django-tailwind = "^3.3.0"
mysqlclient = "^2.1.1"
python-dotenv = "^0.21.0"
requests = "^2.26.0"
django-extensions = "^3.2.1"

[tool.poetry.group.dev.dependencies]
codespell = {git = "https://github.com/codespell-project/codespell.git", rev = "fd1d5c0"}
coverage = {extras = ["toml"], version = "^6.4"}
factory-boy = "^3.2.0"
ipython = "^8.5"
jedi = "^0.18"
pdbpp = "^0.10"
tblib = "^1.7.0"
toml = "^0.10.2"
types-Markdown = "^3.4.2"
types-requests = "^2.28.10"
yapf = "^0.32"
pyright = "^1.1.279"

[tool.yapf]
based_on_style = "google"
column_limit = 80
use_tabs = false

[tool.coverage.run]
branch = true
omit = [
	"*/site-packages/*",
	"*/migrations/*",
	"manage.py",
]

[tool.pyright]
enableTypeIgnoreComments = true
exclude = ["**/node_modules", "**/typings", "**/__pycache__", ".git", "venv", "**/migrations"]
pythonPlatform = "Linux"
pythonVersion = "3.9"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true

reportAssertAlwaysTrue = "error"
reportCallInDefaultInitializer = "warning"
reportConstantRedefinition = "none"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "none"
reportGeneralTypeIssues = "error"
reportImplicitStringConcatenation = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "none"
reportIncompleteStub = "none"
reportInvalidStringEscapeSequence = "error"
reportInvalidTypeVarUse = "warning"
reportMissingImports = "error"
reportMissingModuleSource = "warning"
reportMissingTypeArgument = "warning"
reportMissingTypeStubs = false
reportOptionalCall = "error"
reportOptionalContextManager = "error"
reportOptionalIterable = "error"
reportOptionalMemberAccess = "error"
reportOptionalOperand = "error"
reportOptionalSubscript = "error"
reportOverlappingOverload = "error"
reportPrivateUsage = "error"
reportPropertyTypeMismatch = "error"
reportSelfClsParameterName = "warning"
reportTypedDictNotRequiredAccess = "warning"
reportUnboundVariable = "error"
reportUndefinedVariable = "error"
reportUnitializedInstanceVariable = "warning"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "error"
reportUnknownVariableType = "none"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportUnnecessaryIsInstance = "error"
reportUnsupportDunderAll = "warning"
reportUntypedBaseClass = "none"
reportUntypedClassDecorator = "none"
reportUntypedFunctionDecorator = "warning"
reportUntypedNamedTuple = "error"
reportUnusedCallResult = "none"
reportUnusedClass = "error"
reportUnusedCoroutine = "error"
reportUnusedFunction = "error"
reportUnusedImport = "none"
reportUnusedNamedTuple = "error"
reportUnusedVariable = "error"
reportWildcardImportFromLibrary = "warning"
strictDictionaryInference = false
strictListInference = false
strictParameterNoneValue = false
strictSetInference = false

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.codespell]
skip = "theme/static_src/package-lock.json,*/fixtures/*.yaml"
count = ""
quiet-level = 3
ignore-words-list="nd,preform"

[tool.djlint]
profile = "django"
indent = 2
ignore = "D018,H006,H013,H021"
format_css = true
format_js = true
