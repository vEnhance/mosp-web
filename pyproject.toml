[tool.poetry]
name = "mospweb"
version = "1.0.0"
description = "MOSP Puzzle Hunt website"
authors = ["Evan Chen <evan@evanchen.cc>"]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
Django = "^4.2.13"
Markdown = "^3.5.2"
PyMySQL = "^1.1.1"
PyYAML = "^6.0"
crispy-tailwind = "^0.5.0"
django-markdownx = "^4.0.7"
django-reversion = "^5.0.12"
django-stubs = "^4.2.7"
django-stubs-ext = "^4.2.7"
django-tailwind = "^3.8.0"
mysqlclient = "^2.2.4"
python-dotenv = "^1.0.1"
requests = "^2.32.3"
django-extensions = "^3.2.1"

[tool.poetry.group.dev.dependencies]
codespell = "^2.2.6"
coverage = {extras = ["toml"], version = "^7.5.4"}
djlint = "^1.34.1"
factory-boy = "^3.2.0"
jedi = "^0.19.0"
pdbpp = "^0.10.3"
ruff = "^0.5.1"
tblib = "^3.0.0"
toml = "^0.10.2"
types-Markdown = "^3.6.0.20240316"
types-requests = "^2.32.0.20240622"
pyright = "^1.1.370"

[tool.coverage.run]
branch = true
omit = [
	"*/site-packages/*",
	"*/migrations/*",
	"manage.py",
]

[tool.pyright]
enableTypeIgnoreComments = true
exclude = ["**/node_modules", "**/typings", "**/__pycache__", ".git", "venv", "**/migrations"]
pythonPlatform = "Linux"
pythonVersion = "3.10"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true

reportAssertAlwaysTrue = "error"
reportCallInDefaultInitializer = "warning"
reportConstantRedefinition = "none"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "none"
reportGeneralTypeIssues = "error"
reportImplicitStringConcatenation = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "none"
reportIncompleteStub = "none"
reportInvalidStringEscapeSequence = "error"
reportInvalidTypeVarUse = "warning"
reportMissingImports = "error"
reportMissingModuleSource = "warning"
reportMissingTypeArgument = "warning"
reportMissingTypeStubs = false
reportOptionalCall = "error"
reportOptionalContextManager = "error"
reportOptionalIterable = "error"
reportOptionalMemberAccess = "error"
reportOptionalOperand = "error"
reportOptionalSubscript = "error"
reportOverlappingOverload = "error"
reportPrivateUsage = "error"
reportPropertyTypeMismatch = "error"
reportSelfClsParameterName = "warning"
reportTypedDictNotRequiredAccess = "warning"
reportUnboundVariable = "error"
reportUndefinedVariable = "error"
reportUnitializedInstanceVariable = "warning"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "error"
reportUnknownVariableType = "none"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportUnnecessaryIsInstance = "error"
reportUnsupportDunderAll = "warning"
reportUntypedBaseClass = "none"
reportUntypedClassDecorator = "none"
reportUntypedFunctionDecorator = "warning"
reportUntypedNamedTuple = "error"
reportUnusedCallResult = "none"
reportUnusedClass = "error"
reportUnusedCoroutine = "error"
reportUnusedFunction = "error"
reportUnusedImport = "none"
reportUnusedNamedTuple = "error"
reportUnusedVariable = "error"
reportWildcardImportFromLibrary = "warning"
strictDictionaryInference = false
strictListInference = false
strictParameterNoneValue = false
strictSetInference = false

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.codespell]
skip = "theme/static_src/package-lock.json,fixtures/*.json,poetry.lock,package-lock.json"
count = ""
quiet-level = 3
ignore-words-list="nd,preform,assertIn"

[tool.djlint]
profile = "django"
indent = 2
ignore = "D018,H006,H013,H021"
format_css = true
format_js = false

[tool.isort]
profile = "black"
